#!/usr/bin/env python3
import os, sys, argparse, logging, yaml
from pprint import pprint

DN = os.path.dirname(os.path.abspath(__file__))

sys.path.append(DN + '/src');
from cloudinventario.cloudinventario import CloudInventario

def getArgs():
   parser = argparse.ArgumentParser(description='CloudInventory args')
   parser.add_argument('-c', '--config', action='store', required=True,
                       help='Config file')
   parser.add_argument('-l', '--list', action='store_true',
                       help='List collectors')
   parser.add_argument('-n', '--name', action='store',
                       help='Collector to run')
   parser.add_argument('-a', '--all', action='store_true',
                       help='Run all collectors')
   parser.add_argument('-p', '--prune', action='store_true',
                       help='Cleanup old data')
   parser.add_argument('-v', '--verbose', action='count', default=0,
                       help='Verbose')
   args = parser.parse_args()
   return args

def loadConfig(config_file):
   with open(config_file) as file:
       return yaml.safe_load(file)
   return None

def main():
  args = getArgs()

  # init logging
  level = logging.WARNING
  if args.verbose > 1:
    level = logging.DEBUG
  elif args.verbose > 0:
    level = logging.INFO
  logging.basicConfig(format='%(asctime)s [%(levelname)s] %(message)s', level=level)

  # parse config
  config = loadConfig(args.config)
  cinv = CloudInventario(config)

  if args.prune:
    cinv.cleanup(days = 5)

  if args.list:
    for col in cinv.collectors:
      print("{}".format(col))
    return 0
  elif args.name:
    cinv.collect(args.name)
    cinv.store()
    return 0
  elif args.all:
    for col in cinv.collectors:
      logging.info("collector name={}".format(col))
      if cinv.collect(col):
        cinv.store()
        cinv.clear()
      else:
        logging.info("collector failed name={}".format(col))
    return 0
  elif args.prune:
    return 0
  else:
    print("No action specified !", file=sys.stderr)
    return 1

# MAIN
sys.exit(main())
